{"version":3,"sources":["components/widgets/Tutor.js","components/widgets/Company.js","components/widgets/Header.js","components/widgets/Body.js","pages/Home.js","components/App.js","serviceWorker.js","store/CTX.js","store/Provider.js","index.js"],"names":["tutors","id","name","facebook","avater","Tutor","useState","select","tutor","isOpen","state","setState","selectTutor","find","Number","className","onClick","Edit","value","onChange","e","target","onBlur","map","key","src","alt","Company","Header","initState","localStorage","courseHeader","JSON","parse","getItem","title","subject","number","edit","setEdit","changeHandler","blurHandler","setItem","stringify","submitHandler","onKeyUp","Body","initStorage","courseBody","body","editBody","editor","InlineEditor","config","toolbar","data","getData","Home","portant","setPortant","useEffect","window","innerHeight","innerWidth","addEventListener","orientation","console","log","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","CourseContext","createContext","Provider","props","children","app","StrictMode","ReactDOM","render","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf9d8f24.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Edit } from '@material-ui/icons';\r\nimport './tutor.css';\r\n\r\nconst tutors = [\r\n  {\r\n    id: 1,\r\n    name: \"Jubaer Ahmad\",\r\n    facebook: \"fb/jubaerahmad.info\",\r\n    avater: \"//eop.pabnainfo.com/images/1.jpg\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Sofiqul Islam\",\r\n    facebook: \"fb/SChoolWab\",\r\n    avater: \"//eop.pabnainfo.com/images/2.jpg\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Nirob hasan\",\r\n    facebook: \"fb/nirobbd21\",\r\n    avater: \"//eop.pabnainfo.com/images/9.jpg\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Swapon Hossain\",\r\n    facebook: \"fb/swapon109\",\r\n    avater: \"//eop.pabnainfo.com/images/4.jpg\"\r\n  }\r\n];\r\n\r\nconst Tutor = () => {\r\n  const [state, setState] = useState({\r\n    select: 1,\r\n    tutor: 1,\r\n    isOpen: false\r\n  });\r\n  const changeTutor = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value,\r\n      isOpen: false\r\n    });\r\n  };\r\n\r\n  const selectTutor = tutors.find(\r\n    tutor => Number(tutor.id) === Number(state.tutor)\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"tutor-title d-flex\">\r\n        Tutor\r\n        <span\r\n          className=\"edit-icon ml-auto\"\r\n          onClick={() =>\r\n            setState({\r\n              ...state,\r\n              isOpen: !state.isOpen\r\n            })\r\n          }\r\n        >\r\n          <Edit className=\"text-light\" />\r\n        </span>\r\n      </div>\r\n      {state.isOpen && (\r\n        <div className=\"select-tutor\">\r\n          <select\r\n            className=\"custom-select custom-select-sm\"\r\n            name=\"tutor\"\r\n            value={state.tutor}\r\n            onChange={changeTutor}\r\n            onBlur={() =>\r\n              setState({\r\n                ...state,\r\n                isOpen: false\r\n              })\r\n            }\r\n          >\r\n            {tutors.map(tutor => (\r\n              <option key={tutor.id} value={tutor.id}>\r\n                {tutor.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"avater\">\r\n        <img src={selectTutor.avater} alt={selectTutor.name} />\r\n      </div>\r\n      <p className=\"tutor-name\">{selectTutor.name}</p>\r\n      <p className=\"tutor-fb\">{selectTutor.facebook}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Tutor;","import React from 'react';\r\n\r\nimport './company.css';\r\n\r\nconst Company = () => {\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"company-title\">Arrange By</div>\r\n        <img\r\n          className=\"company-logo\"\r\n          src=\"https://i.ibb.co/njZs1cF/logo-square.png\"\r\n          alt=\"sdsd\"\r\n        />\r\n      <p className=\"company-website\">www.darunit.com</p>\r\n    </div>\r\n  );\r\n}\r\nexport default Company;","import React, { useState, Fragment } from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n\r\n  const initState = localStorage.courseHeader\r\n    ? JSON.parse(localStorage.getItem(\"courseHeader\"))\r\n    : {\r\n        title: \"Basic Website Design\",\r\n        subject: \"HTML (Table, Lists)\",\r\n        number: \"01\"\r\n      };\r\n\r\n  const [state, setState] = useState({\r\n    title: initState.title,\r\n    subject: initState.subject,\r\n    number: initState.number,\r\n  });\r\n\r\n  const [edit, setEdit] = useState({\r\n    title: false,\r\n    subject: false,\r\n    number: false\r\n  })\r\n\r\n  const changeHandler = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n  \r\n  const blurHandler = e => {\r\n    setEdit({\r\n      ...edit,\r\n      [e.target.name]: false\r\n    })\r\n    localStorage.setItem(\"courseHeader\", JSON.stringify(state));\r\n  }\r\n  \r\n  const submitHandler = e => {\r\n    e.key === \"Enter\" &&\r\n    setEdit({\r\n      ...edit,\r\n      [e.target.name]: false\r\n    });\r\n    localStorage.setItem(\"courseHeader\", JSON.stringify(state));\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"left\">\r\n        <h1 onClick={() => setEdit({ title: true })}>\r\n          {!edit.title ? (\r\n            state.title\r\n          ) : (\r\n            <input\r\n              className=\"title\"\r\n              name=\"title\"\r\n              value={state.title}\r\n              onChange={changeHandler}\r\n              onBlur={blurHandler}\r\n              onKeyUp={submitHandler}\r\n            />\r\n          )}\r\n        </h1>\r\n        <p>\r\n          <span className=\"subfixed\">Subject:</span>\r\n          <span onClick={() => setEdit({ subject: true })}>\r\n            {!edit.subject ? (\r\n              state.subject\r\n            ) : (\r\n              <input\r\n                className=\"subject\"\r\n                name=\"subject\"\r\n                value={state.subject}\r\n                onChange={changeHandler}\r\n                onBlur={blurHandler}\r\n                onKeyUp={submitHandler}\r\n              />\r\n            )}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div className=\"right\">\r\n        <p>\r\n          <span className=\"number-prefix\">Class: </span>\r\n          <span className=\"number\" onClick={() => setEdit({ number: true })}>\r\n            {!edit.number ? (\r\n              state.number\r\n            ) : (\r\n              <input\r\n                className=\"number\"\r\n                name=\"number\"\r\n                value={state.number}\r\n                onChange={changeHandler}\r\n                onBlur={blurHandler}\r\n                onKeyUp={submitHandler}\r\n              />\r\n            )}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Header;","import React, { useState, Fragment } from 'react';\r\n\r\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\r\nimport InlineEditor from \"@ckeditor/ckeditor5-build-inline\";\r\nimport './body.css';\r\n\r\nconst Body = () => {\r\n  const initStorage = localStorage.courseBody\r\n    ? JSON.parse(localStorage.getItem(\"courseBody\"))\r\n    : \"Your Content is Goes Here...\";\r\n  \r\n  const [state, setState] = useState({\r\n    body: initStorage,\r\n    editBody: false\r\n  });\r\n\r\n  const changeHandler = (e, editor) => {\r\n    const data = editor.getData();\r\n    setState({\r\n      ...state,\r\n      body: data\r\n    });\r\n    localStorage.setItem('courseBody', JSON.stringify(data));\r\n  };\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <CKEditor\r\n        editor={InlineEditor}\r\n        config={{ toolbar: [\"heading\", \"bold\", \"italic\"] }}\r\n        data={state.body}\r\n        onChange={changeHandler}\r\n        // onBlur={blurHandler}\r\n      />\r\n    </Fragment>\r\n  );\r\n  \r\n}\r\nexport default Body;","import React, { useEffect, Fragment, useState} from \"react\";\r\n\r\nimport Tutor from '../components/widgets/Tutor';\r\nimport Company from '../components/widgets/Company';\r\nimport Header from '../components/widgets/Header';\r\nimport Body from '../components/widgets/Body';\r\n\r\nimport './pages.css';\r\n\r\nconst Home = () => {\r\n\r\n  const [portant, setPortant] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.innerHeight > window.innerWidth) {\r\n      setPortant(true);\r\n    }\r\n\r\n    window.addEventListener(\r\n      \"orientationchange\",\r\n      function() {\r\n        switch (window.orientation) {\r\n          case 0:\r\n            setPortant(true);\r\n            break;\r\n          case 90:\r\n            setPortant(false);\r\n            break;\r\n          default:\r\n            return portant;\r\n        }\r\n      },\r\n      false\r\n    );\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  console.log(portant)\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      { !portant ? (\r\n        <Fragment>\r\n          <nav className=\"header\">\r\n            <Header />\r\n          </nav>\r\n          <main className=\"main\">\r\n            <div className=\"sidebar\">\r\n              <Company />\r\n              <Tutor />\r\n            </div>\r\n            <div className=\"body\">\r\n              <Body />\r\n            </div>\r\n          </main>\r\n        </Fragment>\r\n      ) : (\r\n        <div className=\"err-root\">\r\n          <h4 className=\"text-center text-light orientationErr\">Please use Landscape!</h4>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","import React from 'react';\nimport './App.css';\n\nimport Home from '../pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext } from 'react';\r\n\r\n\r\nexport const CourseContext = createContext();\r\n","import React from 'react';\r\n\r\nimport { CourseContext } from './CTX';\r\n\r\nconst Provider = props => {\r\n\r\n  const access = \"Hello Context\";\r\n\r\n  return (\r\n    <CourseContext.Provider value={ access }>\r\n      { props.children }\r\n    </CourseContext.Provider>\r\n  )\r\n}\r\nexport default Provider;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n// import Bootstrap and other css\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\n// import Rot Provider\nimport Provider from './store/Provider';\n\nconst app = (\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render( app, document.getElementById('root') );\n\nserviceWorker.register();\n"],"sourceRoot":""}